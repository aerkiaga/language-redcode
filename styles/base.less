@import "syntax-variables";

atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}


// Syntax styles

.syntax--comment.syntax--line.syntax--semicolon.syntax--comment.syntax--red {
  color: @dark-red;
}

.syntax--comment.syntax--block.syntax--forcomment.syntax--red {
  color: @dark-green;
}

.syntax--string.syntax--unquoted.syntax--info.syntax--red {
  color: @dark-red;
}

.syntax--keyword {
  &.syntax--operator.syntax--addrmode.syntax--red {
    color: @red;
  }
  &.syntax--other {
    &.syntax--info {
      color: @red;
    }
    &.syntax--assert {
      color: @purple;
    }
    &.syntax--pseudoop {
      color: @green;
    }
    &.syntax--opcode {
      color: @cyan;
    }
    &.syntax--modifier {
      color: @blue;
    }
  }
}


// Mini editor

atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}
